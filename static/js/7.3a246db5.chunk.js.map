{"version":3,"sources":["pages/Sketch/components/Canvas.module.css","pages/Sketch/Sketch.module.css","pages/Sketch/components/Canvas.js","pages/Sketch/Sketch.js"],"names":["module","exports","Canvas","canvasRef","useRef","useState","context","setContext","useEffect","current","getContext","isDrawing","setIsDrawing","x","y","currentPoint","setCurrentPoint","mousePosition","setMousePosition","relativeCoordinatesForEvent","event","pageX","offsetLeft","pageY","offsetTop","className","styles","options","buttons","btn_download","onClick","link","document","createElement","download","href","toDataURL","click","btn_clear","clearRect","width","height","ref","canvas","onMouseDown","console","log","button","point","onMouseMove","info","style","x1","y1","color","strokeStyle","lineJoin","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","drawLine","onMouseUp","onMouseLeave","Sketch","title","body"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,QAAU,wBAAwB,UAAY,0BAA0B,aAAe,6BAA6B,cAAgB,gC,oBCAxND,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,oFCkH3CC,MAhHf,WAEI,IAAMC,EAAYC,iBAAO,MAFX,EAGgBC,qBAHhB,mBAGPC,EAHO,KAGEC,EAHF,KAqBdC,qBAAU,WACND,EAAWJ,EAAUM,QAAQC,WAAW,SACzC,IAvBW,MAyBoBL,oBAAS,GAzB7B,mBAyBPM,EAzBO,KAyBIC,EAzBJ,OA0B0BP,mBAAS,CAACQ,EAAG,GAAIC,EAAG,KA1B9C,mBA0BPC,EA1BO,KA0BOC,EA1BP,OA2B4BX,mBAAS,CAACQ,EAAG,IAAKC,EAAG,MA3BjD,mBA2BPG,EA3BO,KA2BQC,EA3BR,KA6Bd,SAASC,EAA4BC,GACjC,MAAO,CACLP,EAAGO,EAAMC,MAAQlB,EAAUM,QAAQa,WACnCR,EAAGM,EAAMG,MAAQpB,EAAUM,QAAQe,WAuDzC,OACI,qCACI,sBAAKC,UAAWC,IAAOC,QAAvB,UACI,wBAAQF,UAAS,UAAKC,IAAOE,QAAZ,YAAuBF,IAAOG,cAC3CC,QAXhB,WACI,IAAIC,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAW,cAChBH,EAAKI,KAAOhC,EAAUM,QAAQ2B,UAAU,aACxCL,EAAKM,SAMG,sBAGA,wBAAQZ,UAAS,UAAKC,IAAOE,QAAZ,YAAuBF,IAAOY,WAC3CR,QAlBhB,WACIxB,EAAQiC,UAAU,EAAG,EAAGpC,EAAUM,QAAQ+B,MAAOrC,EAAUM,QAAQgC,SAgB3D,sBAIJ,wBACIC,IAAKvC,EACLqC,MAAM,QACNC,OAAO,QACPhB,UAAWC,IAAOiB,OAClBC,YAlEZ,SAAyBxB,GAGrB,GAFAyB,QAAQC,IAAI1B,GAEQ,IAAjBA,EAAM2B,OAAT,CAIA,IAAMC,EAAQ7B,EAA4BC,GAE1CR,GAAa,GACbI,EAAgBgC,KAyDRC,YAtDZ,SAAyB7B,GACrB,IAAM4B,EAAQ7B,EAA4BC,GAC1CF,EAAiB8B,GAEbrC,KAhDR,SAAkBuC,GAAmB,IAAbC,EAAY,uDAAJ,GACpBtC,EAAiBqC,EAAjBrC,EAAGC,EAAcoC,EAAdpC,EAAGsC,EAAWF,EAAXE,GAAIC,EAAOH,EAAPG,GADc,EAEQF,EAAhCG,aAFwB,MAEhB,SAFgB,IAEQH,EAAdX,aAFM,MAEE,EAFF,EAIhClC,EAAQiD,YAAcD,EACtBhD,EAAQkD,SAAW,QACnBlD,EAAQmD,UAAYjB,EAEpBlC,EAAQoD,YACRpD,EAAQqD,OAAO9C,EAAGC,GAClBR,EAAQsD,OAAOR,EAAIC,GACnB/C,EAAQuD,YAERvD,EAAQwD,SAuCRC,CACI,CACIlD,EAAGE,EAAaF,EAChBC,EAAGC,EAAaD,EAChBsC,GAAIJ,EAAMnC,EACVwC,GAAIL,EAAMlC,IAGlBE,EAAgBgC,KAuCRgB,UApCZ,WACIpD,GAAa,IAoCLqD,aAjCZ,WACIrD,GAAa,MAkCT,sBAAKa,UAAWC,IAAOT,cAAvB,uCAAiEA,EAAcJ,EAA/E,KAAoFI,EAAcH,EAAlG,Y,kBC9FGoD,UAZf,WAEI,OACI,0BAASzC,UAAWC,IAAOwC,OAA3B,UACI,qBAAKzC,UAAWC,IAAOyC,MAAvB,oBACA,qBAAK1C,UAAWC,IAAO0C,KAAvB,SACI,cAAC,EAAD","file":"static/js/7.3a246db5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__31aNM\",\"options\":\"Canvas_options__2cAU1\",\"buttons\":\"Canvas_buttons__2XOZc\",\"btn_clear\":\"Canvas_btn_clear__tKPeM\",\"btn_download\":\"Canvas_btn_download__1_fio\",\"mousePosition\":\"Canvas_mousePosition__q_QQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sketch\":\"Sketch_Sketch__1d42y\",\"title\":\"Sketch_title__1yAAm\"};","import React, {useState, useEffect, useRef} from 'react';\nimport styles from './Canvas.module.css';\n\nfunction Canvas() {\n\n    const canvasRef = useRef(null);\n    const [context, setContext] = useState();\n\n    function drawLine(info, style = {}) {\n        const { x, y, x1, y1 } = info;\n        const { color = 'tomato', width = 1 } = style;\n     \n        context.strokeStyle = color;\n        context.lineJoin = 'round';\n        context.lineWidth = width;\n        \n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x1, y1);\n        context.closePath();\n        \n        context.stroke();\n      }\n\n    useEffect(() => {\n        setContext(canvasRef.current.getContext('2d'));\n    }, [])\n\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [currentPoint, setCurrentPoint] = useState({x: \"\", y: \"\"});\n    const [mousePosition, setMousePosition] = useState({x: \"0\", y: \"0\"});\n\n    function relativeCoordinatesForEvent(event) {\n        return {\n          x: event.pageX - canvasRef.current.offsetLeft,\n          y: event.pageY - canvasRef.current.offsetTop,\n        };\n    }\n\n    function handleMouseDown(event) {\n        console.log(event);\n\n        if(event.button !== 0) {\n            return;\n        }\n\n        const point = relativeCoordinatesForEvent(event);\n\n        setIsDrawing(true);\n        setCurrentPoint(point);\n    }\n\n    function handleMouseMove(event) {\n        const point = relativeCoordinatesForEvent(event);\n        setMousePosition(point);\n\n        if(!isDrawing) {\n            return;\n        }\n\n        drawLine(\n            {\n                x: currentPoint.x,\n                y: currentPoint.y,\n                x1: point.x,\n                y1: point.y \n            }\n        )\n        setCurrentPoint(point);\n    }\n\n    function handleMouseUp() {\n        setIsDrawing(false);\n    }\n\n    function handleMouseLeave() {\n        setIsDrawing(false);\n    }\n\n    function clear() {\n        context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    }\n\n    function download() {\n        let link = document.createElement('a');\n        link.download = 'drawing.png';\n        link.href = canvasRef.current.toDataURL(\"image/png\");\n        link.click();\n    }\n\n    return (\n        <>\n            <div className={styles.options}>\n                <button className={`${styles.buttons} ${styles.btn_download}`}\n                    onClick={download}\n                >Download</button>\n                <button className={`${styles.buttons} ${styles.btn_clear}`}\n                    onClick={clear}\n                >Clear</button>\n            </div>\n            <canvas\n                ref={canvasRef}\n                width=\"700px\"\n                height=\"500px\"\n                className={styles.canvas}\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                onMouseLeave={handleMouseLeave}    \n            />\n            <div className={styles.mousePosition}>Mouse Position: (x, y) = ({mousePosition.x}, {mousePosition.y}) </div>\n        </>\n    )\n}\n\nexport default Canvas\n","import React from 'react';\nimport Canvas from './components/Canvas';\nimport styles from './Sketch.module.css';\n\nfunction Sketch() {\n\n    return (\n        <section className={styles.Sketch}>\n            <div className={styles.title}>Sketch</div>\n            <div className={styles.body}>\n                <Canvas />\n            </div>\n        </section>\n    )\n}\n\nexport default Sketch;\n"],"sourceRoot":""}